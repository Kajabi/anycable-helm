{{- $values := include "anycableGo.values" . | fromYaml }}
{{- with $values }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "anycableGo.fullname" $ }}

  # TODO(brc/sdh) #############################################################
  annotations:
    secret.reloader.stakater.com/reload: reloader-vault-secret
  #############################################################################

  labels:
    app: {{ template "anycableGo.name" $ }}
    component: anycable-go
    chart: "{{ $.Chart.Name }}-{{ $.Chart.Version | replace "+" "_" }}"
    release: {{ $.Release.Name | quote }}
    heritage: {{ $.Release.Service | quote }}
spec:
  progressDeadlineSeconds: 600
  replicas: {{ .replicas | default 2 }}
  revisionHistoryLimit: {{ .revisionHistoryLimit | default 10 }}
  selector:
    matchLabels:
      app: {{ template "anycableGo.name" $ }}
      component: anycable-go
      release: {{ $.Release.Name | quote }}
  strategy:
    {{- with (.rollingUpdate | default dict) }}
    rollingUpdate:
      maxSurge: {{ .maxSurge | default 1 }}
      maxUnavailable: {{ .maxUnavailable | default 1 }}
    type: RollingUpdate
    {{- end }}
  template:
    metadata:
      labels:
        app: {{ template "anycableGo.name" $ }}
        component: anycable-go
        chart: "{{ $.Chart.Name }}-{{ $.Chart.Version | replace "+" "_" }}"
        release: {{ $.Release.Name | quote }}
        heritage: {{ $.Release.Service | quote }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/env-secret.yml") $ | sha256sum }}

        # TODO(brc/sdh) ########################################################
        vault.hashicorp.com/agent-image: 937028213865.dkr.ecr.us-east-1.amazonaws.com/kajabiprodeng/vault-kubectl:1.9.0
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/agent-inject-command-app: >
          patch_kubernetes_secret.sh reloader-vault-secret
          /vault/secrets/app
        vault.hashicorp.com/agent-inject-command-overrides: >
          patch_kubernetes_secret.sh reloader-vault-secret
          /vault/overrides/overrides
        vault.hashicorp.com/agent-inject-secret-app: kajabi-products/secrets/app-development
        vault.hashicorp.com/agent-inject-secret-overrides: kajabi-products/overrides/app-development
        vault.hashicorp.com/agent-inject-status: update
        vault.hashicorp.com/agent-inject-template-app: |
          {{`{{ with secret "kajabi-products/secrets/app-development" }}`}}
          {{`{{ range $k, $v := .Data.data }}`}}
          {{`export {{ $k }}="{{ $v }}"`}}
          {{`{{ end }}`}}
          {{`{{ end }}`}}
        vault.hashicorp.com/agent-inject-template-overrides: |
          {{`{{ with secret "kajabi-products/overrides/app-development" }}`}}
          {{`{{ range $k, $v := .Data.data }}`}}
          {{`export {{ $k }}="{{ $v }}"`}}
          {{`{{ end }}`}}
          {{`{{ end }}`}}
        vault.hashicorp.com/agent-run-as-group: "1000"
        vault.hashicorp.com/agent-run-as-user: "1000"
        vault.hashicorp.com/role: kajabi-products-role
        vault.hashicorp.com/secret-volume-path-overrides: /vault/overrides
        vault.hashicorp.com/service: https://vault.development.kajabi.farm
        vault.hashicorp.com/template-static-secret-render-interval: 90s
        ########################################################################

      name: {{ $.Release.Name | quote }}
    spec:
      # TODO(brc/sdh) ######################################################
      serviceAccountName: vault-agent-injector
      ######################################################################

      {{- if .nodeSelector }}
      nodeSelector: {{ toYaml .nodeSelector | nindent 8 }}
      {{- end }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchLabels:
                    app: {{ template "anycableGo.name" $ }}
                    release: {{ $.Release.Name | quote }}
              weight: 100
      {{- if .image.pullSecrets.enabled }}
      imagePullSecrets:
        - name: "{{ $.Release.Name }}-docker-registry-secret"
      {{- end }}
      containers:
        - name: anycable-go

          # TODO(brc/sdh) ######################################################
          command:
            - /bin/sh
          args:
            - "-c"
            - |
              # Mimic /kubernetes_init to get Vault secrets
              # (we really just need $REDIS_URL)
              for f in $(find /vault/secrets /vault/overrides -type f); do
                  source $f;
              done;

              # FIXME Either populate vault with $ANYCABLE_REDIS_URL set to the right value (the FQDN of the
              #       elasticache primary endpoint) or, better yet, correct $REDIS_URL to use the proper name.
              #
              # ( If you wanted to perputate the PoC hack below, you'd have to do something like use a
              #   switch statement to detect which environment $REDIS_URL is current using and then
              #   substitute a valid name accordingly. )
              #
              # Anycable-go v0.6.5 requires SSL verification; use the right hostname (the one in the TLS cert).
              #
              export REDIS_URL="$(echo $REDIS_URL |sed 's/kajabi-application-redis-development\.us-east-1\.kajabi\.sandbox/master.kajabi-application-redis-development.zcbft0.use1.cache.amazonaws.com/')"

              /usr/local/bin/anycable-go
          ######################################################################

          {{- with .env }}
          ports:
            - name: http
              containerPort: {{ .anycablePort | required "A valid listening port for anycable is required! Please specify `env.anycablePort` in values!" }}
              protocol: TCP
            {{- if .anycableMetricsPort }}
            - name: metrics
              containerPort: {{ .anycableMetricsPort }}
              protocol: TCP
            {{- end }}
          {{- end }}
          envFrom:
            - secretRef:
                name: "{{ template "anycableGo.fullname" $ }}-secrets"
            {{- range $name := .secrets }}
            - secretRef:
                name: {{ $name | quote }}
            {{- end }}
          image: "{{ .image.repository }}:{{ .image.tag }}"
          imagePullPolicy: {{ .image.pullPolicy | quote }}
          {{- if hasKey $values "livenessProbe" }}
          livenessProbe: {{ toYaml .livenessProbe | nindent 12 }}
          {{- else }}
          livenessProbe:
            httpGet:
              path: /health
              port: http
              scheme: {{ if .tls }}HTTPS{{ else }}HTTP{{ end }}
            initialDelaySeconds: 90
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
            periodSeconds: 10
          {{- end }}
          {{- if hasKey $values "readinessProbe" }}
          readinessProbe: {{ toYaml .readinessProbe | nindent 12 }}
          {{- else }}
          readinessProbe:
            httpGet:
              path: /health
              port: http
              scheme: {{ if .tls }}HTTPS{{ else }}HTTP{{ end }}
            initialDelaySeconds: 15
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
            periodSeconds: 10
          {{- end }}
          {{- if .resources }}
          resources: {{ toYaml .resources | nindent 12 }}
          {{- end }}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          {{- if .tls }}
          volumeMounts:
            - name: ssl
              mountPath: "/etc/ssl/anycable-go"
              readOnly: true
          {{- end }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      {{- if .tls }}
      volumes:
        - name: ssl
          secret:
            secretName: {{ .tls.secretName | quote }}
      {{- end }}
{{- end }}
